/**
 *  Copyright (c) 2025
 *  @Version : 1.0.0
 *  @Author  : https://salarizadi.ir
 *  @Repository : https://github.com/salarizadi/swipetoast
 *  @Description:
 *  jQuery SwipeToast is a modern toast notification plugin for jQuery. It supports swipe-to-dismiss
 *  functionality, various positions, progress bars, RTL support, custom styling, and more. Ideal for
 *  enhancing user experience with minimalistic and responsive toast notifications.
 *  @License : MIT
 * */
!function(t){"use strict";const s={message:"",type:"default",duration:4e3,swipeable:!0,position:"bottom-center",rtl:!1,closeButton:!1,progressBar:!1,onOpen:null,onClose:null,className:"",offset:24,swipeThreshold:.5},e=["top-left","top-center","top-right","center-left","center","center-right","bottom-left","bottom-center","bottom-right"];let i={};class o{constructor(e){this.settings=t.extend({},s,e),this.validateSettings(),this.init()}validateSettings(){e.includes(this.settings.position)||(console.warn(`Invalid position: ${this.settings.position}. Defaulting to 'bottom-center'`),this.settings.position="bottom-center")}init(){this.initContainer(),this.createToast(),this.show(),this.handleWindowResize()}calculateContainerPosition(t){const s=this.settings.offset,e={position:"fixed",zIndex:9999,pointerEvents:"none",boxSizing:"border-box",width:"center"===t?"auto":"100%",maxWidth:"360px",padding:t.includes("center")?"0 16px":"0"};if("center"===t)return{...e,top:"50%",left:"50%",transform:"translate(-50%, -50%)"};const[i,o]=t.split("-");switch(i){case"top":e.top=`${s}px`;break;case"center":e.top="50%",e.transform="translateY(-50%)";break;case"bottom":e.bottom=`${s}px`}if(o)switch(o){case"left":e.left=`${s}px`;break;case"center":e.left="50%",e.transform="center"===i?"translate(-50%, -50%)":"translateX(-50%)";break;case"right":e.right=`${s}px`}return e}initContainer(){const s=this.settings.position;if(!i[s]){const e=t("<div></div>").addClass("swipetoast-container").addClass(`swipetoast-${s}`),o=this.calculateContainerPosition(s);e.css(o),i[s]=e,t("body").append(e)}this.$container=i[s]}createToast(){this.$toast=t('<div class="swipetoast"></div>').addClass(this.settings.type).addClass(this.settings.className).toggleClass("rtl",this.settings.rtl),this.$message=t('<div class="swipetoast-message"></div>').text(this.settings.message).appendTo(this.$toast),this.settings.closeButton&&(this.$closeBtn=t('<button class="swipetoast-close">&times;</button>').appendTo(this.$toast)),this.settings.progressBar&&(this.$progress=t('<div class="swipetoast-progress"></div>').appendTo(this.$toast)),this.bindEvents()}bindEvents(){this.settings.swipeable&&this.initSwipeHandler(),this.settings.closeButton&&this.$closeBtn.on("click",(t=>{t.stopPropagation(),this.hide()})),this.$toast.on("click",(s=>{t(s.target).hasClass("swipetoast-close")||this.hide()}))}initSwipeHandler(){let t,s,e,i,o,n=!1,a="";this.$toast.on("touchstart mousedown",(r=>{const h="touchstart"===r.type?r.originalEvent.touches[0]:r;t=h.pageX,s=h.pageY,e=t,i=s,n=!0,a="",o=this.$toast.outerWidth(),this.$toast.addClass("swiping").css("transition","none")})).on("touchmove mousemove",(r=>{if(!n)return;const h="touchmove"===r.type?r.originalEvent.touches[0]:r;e=h.pageX,i=h.pageY;const c=e-t,l=i-s;if(a||(a=Math.abs(c)>Math.abs(l)?"horizontal":"vertical"),"horizontal"===a){r.preventDefault();const t=1-Math.abs(c)/o*.5;this.$toast.css({transform:`translateX(${c}px)`,opacity:t})}})).on("touchend touchcancel mouseup mouseleave",(()=>{if(!n)return;n=!1,this.$toast.removeClass("swiping").css("transition","");const s=e-t,i=o*this.settings.swipeThreshold;if(Math.abs(s)>i){const t=s>0?o:-o;this.$toast.css("transform",`translateX(${t}px)`),setTimeout((()=>this.hide()),150)}else this.$toast.css({transform:"",opacity:""})}))}handleWindowResize(){if(!this.$toast)return;const s=()=>{const t=this.calculateContainerPosition(this.settings.position);this.$container.css(t)};let e;s(),t(window).off("resize.swipetoast").on("resize.swipetoast",(()=>{clearTimeout(e),e=setTimeout(s,100)}))}show(){return this.$toast.appendTo(this.$container),this.$toast[0].offsetHeight,this.settings.progressBar&&this.settings.duration&&this.$progress.css("animation-duration",`${this.settings.duration}ms`),"function"==typeof this.settings.onOpen&&this.settings.onOpen.call(this.$toast),this.settings.duration&&(this.timeout=setTimeout((()=>this.hide()),this.settings.duration)),this}hide(){return this.timeout&&clearTimeout(this.timeout),this.$toast&&(this.$toast.remove(),"function"==typeof this.settings.onClose&&this.settings.onClose.call(this.$toast)),this}}t.swipeToast=function(t){return new o(t)},t.swipeToast.version="1.0.0"}(jQuery);
